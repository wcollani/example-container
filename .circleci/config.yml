version: 2
jobs:
  build:
    docker:
      - image: technekes/circleci

    working_directory: /tmp/app

    steps:
      - checkout
      - setup_remote_docker

      - run:
          name: Build the image
          command: |
            set -o xtrace
            docker build -t "${CIRCLE_PROJECT_REPONAME}:${CIRCLE_BRANCH}.${CIRCLE_BUILD_NUM}" .
            
            #Get version label from container
            CONTAINER_VERSION=$(docker inspect -f {{.Config.Labels.version}} "${CIRCLE_PROJECT_REPONAME}:${CIRCLE_BRANCH}.${CIRCLE_BUILD_NUM}")
            
            echo $CONTAINER_VERSION

            #Save container version
            mkdir temp
            echo "export CONTAINER_VERSION=${CONTAINER_VERSION}" >> temp/env_vars

            #On master or develop, check if version already has a release. 
            #fails if found
            if [ "${CIRCLE_BRANCH}" == "master" ] || [ "${CIRCLE_BRANCH}" == "develop" ];
            then 
                curl -s https://api.github.com/repos/$CIRCLE_PROJECT_USERNAME/$CIRCLE_PROJECT_REPONAME/releases/tags/$CONTAINER_VERSION | grep "Not Found"
            fi
            
      - run:
          name: Run tests
          command: |
            docker run -it "${CIRCLE_PROJECT_REPONAME}:${CIRCLE_BRANCH}.${CIRCLE_BUILD_NUM}" | tee temp/output

      - run: 
          name: Verify tests output
          command: |
            #verification 

      #branch commit
      - deploy:
          name: Push branch tagged image to development repo
          command: |
            if [ "${CIRCLE_BRANCH}" != "master" ] && [ "${CIRCLE_BRANCH}" != "develop" ];
            then 
                echo "Push image to develop repository";

                #Tag image with test repo
                docker tag "${CIRCLE_PROJECT_REPONAME}:${CIRCLE_BRANCH}.${CIRCLE_BUILD_NUM}" "${QUAY_TEST_REPO}:${CIRCLE_BRANCH}.${CIRCLE_BUILD_NUM}"

                #Login to quay.io
                docker login -u=$QUAY_USERNAME -p=$QUAY_PASSWORD quay.io
                
                #Push to quay.io develop repo
                docker push "${QUAY_TEST_REPO}:${CIRCLE_BRANCH}.${CIRCLE_BUILD_NUM}"
 
            fi

      #develop commit
      - deploy:
          name: Push develop release to development repo
          command: |

            #Recover env_vars
            source temp/env_vars
            echo "${CONTAINER_VERSION}"

            if [ "${CIRCLE_BRANCH}" == "develop" ] && [ -n "${CONTAINER_VERSION}" ];
            then 
                echo "Push $version-develop to develop repository & Create github pre-release";

                #Tag image with test repo & develop build ver
                CONTAINER_TAG="${CONTAINER_VERSION}-develop.${CIRCLE_BUILD_NUM}"
                docker tag $CIRCLE_PROJECT_REPONAME:$CIRCLE_BRANCH $QUAY_TEST_REPO:$CONTAINER_TAG

                #Login to quay.io 
                docker login -u=$QUAY_USERNAME -p=$QUAY_PASSWORD quay.io
                
                #Push to quay.io develop repo
                docker push $QUAY_TEST_REPO:$CONTAINER_TAG

                #Create github pre-release
                # Instal `ghr`
                # TODO: Add ghr to primary container
                wget https://github.com/tcnksm/ghr/releases/download/v0.5.3/ghr_v0.5.3_linux_amd64.zip
                unzip ghr_v0.5.3_linux_amd64.zip

                #Create source archive
                tar --exclude=ghr_v0.5.3_linux_amd64.zip --exclude=source.tar.gz --exclude ghr --exclude temp/* -czvf source.tar.gz *

                # Upload source to Gitbub release
                ./ghr -t $GITHUB_TOKEN -u $CIRCLE_PROJECT_USERNAME -r $CIRCLE_PROJECT_REPONAME -c $CIRCLE_SHA1 -replace -prerelease $CONTAINER_TAG source.tar.gz

            fi

      #master commit
      - deploy:
          name: Push alpha,beta or production release
          command: |
            
            #Recover env_vars
            source temp/env_vars
            echo "${CONTAINER_VERSION}"

            if [ "${CIRCLE_BRANCH}" == "master" ] && [ -n "${CONTAINER_VERSION}" ];
            then 
                echo "Push beta image to develop repository & Create github pre-release";

                #Tag image with test repo & beta build ver
                CONTAINER_TAG="${CONTAINER_VERSION}"
                docker tag $CIRCLE_PROJECT_REPONAME:$CIRCLE_BRANCH $QUAY_TEST_REPO:$CONTAINER_TAG

                #Login to quay.io
                docker login -u=$QUAY_USERNAME -p=$QUAY_PASSWORD quay.io

                # Instal `ghr`
                # TODO: Add ghr to primary container
                wget https://github.com/tcnksm/ghr/releases/download/v0.5.3/ghr_v0.5.3_linux_amd64.zip
                unzip ghr_v0.5.3_linux_amd64.zip

                #Create source archive
                tar --exclude=ghr_v0.5.3_linux_amd64.zip --exclude=source.tar.gz --exclude ghr --exclude temp/* -czvf source.tar.gz *

                # Upload source to Gitbub release
                ./ghr -t $GITHUB_TOKEN -u $CIRCLE_PROJECT_USERNAME -r $CIRCLE_PROJECT_REPONAME -c $CIRCLE_SHA1 -replace -prerelease $CONTAINER_TAG source.tar.gz

                #Based on CONTAINER_VERSION create {pre-}release and push to corresponding repo


            fi
